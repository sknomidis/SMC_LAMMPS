####################################################################################################
#                                   Twistable elastic polymer                                      #
####################################################################################################

units nano


#--------------------------------------Initial Parameters------------------------------------------#


# Simulation temperature (K)
variable T equal 300.

# Boltzmann's constant (pN nm / K)
variable kB equal 0.013806504

# Inverse of friction coefficient (ns)
variable gamma equal 0.5

# Printing period (time steps)
#variable output_steps equal 10000
variable output_steps equal 100000

# Simulation timestep (ns)
variable timestep equal 2e-4

# Fixed boundaries in all dimensions.
boundary f f f


#-----------------------------------------Define Styles--------------------------------------------#


atom_style     molecular
bond_style     hybrid fene/expand harmonic
angle_style    hybrid cosine harmonic
improper_style harmonic

pair_style     lj/cut $(3.5)

special_bonds lj 0. 0. 0.
neighbor $(4*3.5) bin

#comm_modify cutoff/multi 2*7 70


#-------------------------------------------Read Data----------------------------------------------#


read_data ${datafile}


#---------------------------------------------Fixes------------------------------------------------#


group DNAfree id 2:$(v_N-1)
group SMC molecule > 1

# Initially-attached DNA bead
group attachment id ${attachment}

# Prevents SMC from sliding upon safety belt formation.
group SMC0 union SMC attachment

# DNA Langevin integration
fix 1a DNAfree nve
fix 1b DNAfree langevin $T $T ${gamma} ${seed}

# SMC is initially a single rigid body (no deformations due to tethering)
fix 2 SMC0 rigid single langevin $T $T ${gamma} ${seed}

# Repulsive surface at bottom
#fix 3 all wall/lj126 ylo EDGE ${epsilon3} ${surfaceThickness} $(v_surfaceThickness*2^(1/6)) 

# For VMD visualisation
dump movie all atom ${output_steps} ${moviefile}
dump_modify movie sort id

# Set integration timestep
timestep ${timestep}


#----------------------------------------------Run-------------------------------------------------#


# Useful variables

variable angle3kappa       equal ${armsStiffness}*${kB}*$T
variable angle3angleATP    equal ${armsAngleATP}
#variable angle3angleAPO    equal 180*acos(${bridgeWidth}/(2*${armLength}))/PI
variable angle3angleAPO1    equal (180/PI)*acos(${bridgeWidth}/${armLength})
#variable angle3angleAPO2    equal (180/PI)*acos(2*${bridgeWidth}/${armLength})

variable improper2kappa    equal ${foldingStiffness}*${kB}*$T
variable improper2angleATP equal 180-${foldingAngleATP}
variable improper2angleAPO equal 180-${foldingAngleAPO}

variable improper3kappa    equal ${asymmetryStiffness}*${kB}*$T
variable improper3angleATP equal abs(90-${foldingAngleATP})
variable improper3angleAPO equal abs(90-${foldingAngleAPO})


# Let DNA relax first (attachment of safety belt)
run 2000000
unfix 2
fix 2 SMC rigid molecule langevin $T $T ${gamma} ${seed}
run 1000000

# Safety belt becomes stronger, to avoid artifacts
bond_coeff 5 harmonic $(50*v_kB*v_T) 0.


# Compute and print mean force along x-axis
variable force equal (fx[1]-fx[$N])/2
fix 4 all ave/time 1 ${output_steps} ${output_steps} v_force file ${forcefile}
run 1000000


##############################################
#                  Print                     #
##############################################
dump config all atom 1 ${outputfile}
dump_modify config sort id append yes
run 0
undump config
##############################################


# Reference point in script (enter loop)
label loop

# Cycle index (looped over)
variable cycle loop ${cycles}

# Equilibrate in the APO-state
run $(round(-(v_stepsATP/2)*ln(random(0,1,v_seed))))

# ATP-bound state
pair_coeff     1 3        $(v_epsilon3*v_kB*v_T) ${sigma}             $(v_sigma*2^(1/6)) # Bridge on
pair_coeff     1 4        $(v_epsilon4*v_kB*v_T) ${sigma}             ${cutoff4}         # Top    site on
pair_coeff     1 5        $(v_epsilon5*v_kB*v_T) ${sigma}             ${cutoff5}         # Middle site on
pair_coeff     1 6        $(v_epsilon6*v_kB*v_T) ${sigma}             ${cutoff6}         # Lower  site on
angle_coeff    3 harmonic ${angle3kappa}         ${angle3angleATP}                       # Arms open
improper_coeff 2          ${improper2kappa}      ${improper2angleATP}                    # Lower compartment folds
improper_coeff 3          ${improper3kappa}      ${improper3angleATP}                    # Lower compartment folds
run $(round(-v_stepsADP*ln(random(0,1,v_seed))))

# ADP-bound state
pair_coeff     1 3        0                      0                    0           # Bridge off
pair_coeff     1 4        $(v_epsilon4*v_kB*v_T) ${sigma}             ${cutoff4}  # Top    site on
pair_coeff     1 5        0                      0                    0           # Middle site off
pair_coeff     1 6        0                      0                    0           # Lower  site off
angle_coeff    3 harmonic ${angle3kappa}         ${angle3angleATP}                # Arms open
improper_coeff 2          ${improper2kappa}      ${improper2angleAPO}             # Lower compartment unfolds
improper_coeff 3          ${improper3kappa}      ${improper3angleAPO}             # Lower compartment unfolds
run $(round(-v_stepsAPO*ln(random(0,1,v_seed))))

# APO state
pair_coeff     1 3        0                      0                    0           # Bridge off
pair_coeff     1 4        0                      0                    0           # Top    site off
pair_coeff     1 5        0                      0                    0           # Middle site off
pair_coeff     1 6        $(v_epsilon6*v_kB*v_T) ${sigma}             ${cutoff6}  # Lower  site on
angle_coeff    3 harmonic ${angle3kappa}         ${angle3angleAPO1}               # Arms close
improper_coeff 2          ${improper2kappa}      ${improper2angleAPO}             # Lower compartment unfolds
improper_coeff 3          ${improper3kappa}      ${improper3angleAPO}             # Lower compartment unfolds
run $(round(-(v_stepsATP/2)*ln(random(0,1,v_seed))))

#angle_coeff    3 harmonic ${angle3kappa}         ${angle3angleAPO2}               # Arms close MORE
#run $(round(-(v_stepsATP/2)*ln(random(0,1,v_seed))))


##############################################
#                  Print                     #
##############################################
dump config all atom 1 ${outputfile}
dump_modify config sort id append yes
run 0
undump config
##############################################


# Exit if done
if "${cycle} >= ${cycles}" then "jump SELF break"

# Increment cycle index
next cycle

# Re-enter loop
jump SELF loop

# Reference point in script (exit loop)
label break


############################################################################################################
